{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/back/article/ajouter/ajouter.component.ts","webpack:///src/app/back/article/ajouter/ajouter.component.html","webpack:///src/app/back/article/liste/liste.component.ts","webpack:///src/app/back/article/liste/liste.component.html","webpack:///src/app/back/article/modifier/modifier.component.ts","webpack:///src/app/back/article/modifier/modifier.component.html","webpack:///src/app/back/dashboard/dashboard.component.ts","webpack:///src/app/back/dashboard/dashboard.component.html","webpack:///src/app/back/menu-dashboard/menu-dashboard.component.ts","webpack:///src/app/back/menu-dashboard/menu-dashboard.component.html","webpack:///src/app/back/parametres/parametres.component.ts","webpack:///src/app/back/parametres/parametres.component.html","webpack:///src/app/back/users/ajout/ajout.component.ts","webpack:///src/app/back/users/ajout/ajout.component.html","webpack:///src/app/back/users/list-user/list-user.component.ts","webpack:///src/app/back/users/list-user/list-user.component.html","webpack:///src/app/back/users/modifier-user/modifier-user.component.ts","webpack:///src/app/back/users/modifier-user/modifier-user.component.html","webpack:///src/app/back/users/users.component.ts","webpack:///src/app/commun/formulaire/formulaire.component.ts","webpack:///src/app/commun/formulaire/formulaire.component.html","webpack:///src/app/commun/login/login.component.ts","webpack:///src/app/commun/login/login.component.html","webpack:///src/app/commun/menu/menu.component.ts","webpack:///src/app/commun/menu/menu.component.html","webpack:///src/app/front/accueil/accueil.component.ts","webpack:///src/app/front/accueil/accueil.component.html","webpack:///src/app/front/articles/articles.component.ts","webpack:///src/app/front/articles/articles.component.html","webpack:///src/app/front/contact/contact.component.ts","webpack:///src/app/front/contact/contact.component.html","webpack:///src/app/front/not-found/not-found.component.ts","webpack:///src/app/front/not-found/not-found.component.html","webpack:///src/app/service/article.service.ts","webpack:///src/app/service/commentaires.service.ts","webpack:///src/app/service/service.component.ts","webpack:///src/app/service/service.component.html","webpack:///src/app/service/users.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","path","component","declarations","imports","providers","bootstrap","AjouterComponent","http","success","erreur","url","error","titre","contenu","status","nomDauteur","get","subscribe","response","console","log","articles","f","value","article","post","splice","valid","control","form","controls","resetForm","onSubmitArticle","onFrmSubmit","onFrmReset","onChange","ListeComponent","service","router","pageActuel","JSON","stringify","put","_id","index","indexOf","ModifierComponent","DashboardComponent","users","commentaires","getAllArticles","nbrArticles","getAllUtilisateurs","nbrUsers","getAllCommentaires","nbrCommentaires","MenuDashboardComponent","ParametresComponent","AjoutComponent","nom","prenom","email","password","role","estActif","utilisateurs","user","onSubmitUser","ListUserComponent","utilisateur","ModifierUserComponent","UsersComponent","FormulaireComponent","LoginComponent","MenuComponent","menu","classList","toggle","toogleMenu","AccueilComponent","ArticlesComponent","services","paramMap","params","getArticleById","ContactComponent","demandeContact","NotFoundComponent","ArticleService","providedIn","CommentairesService","ServiceComponent","UsersService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'les petits benny';\n}\n","<div class=\"container\">\n<app-menu></app-menu>\n<br><br>\n<router-outlet></router-outlet>\n</div>\n<footer class=\"py-4 text-center\">\n  <mark style=\"background-color:pink\">👕 2018 - Les petits Benny</mark>\n</footer>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule} from \"@angular/common/http\";\nimport { FormsModule } from '@angular/forms';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './commun/menu/menu.component';\nimport { AccueilComponent } from './front/accueil/accueil.component';\nimport { ArticlesComponent } from './front/articles/articles.component';\n\nimport { ArticleService } from \"./service/article.service\";\nimport { DashboardComponent } from './back/dashboard/dashboard.component';\nimport { ListeComponent } from './back/article/liste/liste.component';\nimport { MenuDashboardComponent } from './back/menu-dashboard/menu-dashboard.component';\nimport { AjouterComponent } from './back/article/ajouter/ajouter.component';\nimport { ServiceComponent } from './service/service.component';\nimport { UsersComponent } from './back/users/users.component';\nimport { ParametresComponent } from './back/parametres/parametres.component';\nimport { AjoutComponent } from './back/users/ajout/ajout.component';\nimport { ListUserComponent } from './back/users/list-user/list-user.component';\nimport { UsersService } from './service/users.service';\n\nimport { NotFoundComponent } from './front/not-found/not-found.component';\nimport { LoginComponent } from './commun/login/login.component';\nimport { FormulaireComponent } from './commun/formulaire/formulaire.component';\nimport { ModifierComponent } from './back/article/modifier/modifier.component';\nimport { ModifierUserComponent } from './back/users/modifier-user/modifier-user.component';\nimport { ContactComponent } from './front/contact/contact.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    AccueilComponent,\n    ArticlesComponent,\n    NotFoundComponent,\n    DashboardComponent,\n    ListeComponent,\n    MenuDashboardComponent,\n    AjouterComponent,\n    ServiceComponent,\n    UsersComponent,\n    ParametresComponent,\n    AjoutComponent,\n    ListUserComponent,\n    LoginComponent,\n    FormulaireComponent,\n    ContactComponent,\n    ModifierComponent,\n    ModifierUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxPaginationModule,\n    RouterModule.forRoot(\n      [\n        { path : \"\" , component : AccueilComponent},\n        { path : \"article/:id\" , component : ArticlesComponent} ,\n        { path : \"users\" , component : UsersComponent} ,\n        { path : \"modifier\" , component : ModifierComponent} ,\n        { path : \"modifierUser\" , component : ModifierUserComponent} ,\n        { path : \"login\" , component : LoginComponent} ,\n        { path : \"contact\", component : ContactComponent},\n        { path : \"formulaire\", component : FormulaireComponent} ,\n        { path : \"admin/article/liste\" , component : ListeComponent },\n        { path : \"admin/article/ajouter\" , component : AjouterComponent },\n        { path : \"admin/users/ajout\", component : AjoutComponent },\n        { path : \"admin/users/listUser\", component : ListUserComponent },\n        { path : \"admin/parametres\", component : ParametresComponent },\n        { path : \"admin\" , component : DashboardComponent }, // admin après admin/article/liste\n        { path : \"**\", component : NotFoundComponent} // not fond toujours à la fin\n      ]\n    ),\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ArticleService,\n              UsersService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-ajouter',\n  templateUrl: './ajouter.component.html',\n  styleUrls: ['./ajouter.component.css']\n})\n\n\nexport class AjouterComponent implements OnInit {\n\n  success = false;\n  erreur = false;\n  titre_input ;\n  contenu_input;\n  status_input;\n  nomDauteur_input;\n  private url = \"https://agile-oasis-25523.herokuapp.com/articles\";\n  private articles;\n\n\n\n  constructor(private http : HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get(this.url)\n    .subscribe( (response : Response) => {\n     console.log(response)\n      this.articles = response ;\n    });\n  }\n\n    // cette méthode va être déclancher quand l'internaute va cliquer sur le boutton submit \"envoyer du formulaire\"\n    // f => correspond à l'ensemble des champs du formulaire\n    onSubmitArticle(f:NgForm)\n    {\n     console.log(f.value);\n      const article = f.value;\n\n      this.http.post(this.url,(article))\n        .subscribe((response : Response) => {\n          // que f.value soit conforme ou pas  => toujours OK\n          article[\"_id\"] = response['_id']\n          console.log(article);\n          this.articles.splice(0,0,article) ;\n        })\n\n    }\n  //============ sécurité formulaire ===================\n\n\n  error = {\n    titre: false,\n    contenu: false,\n    status : false,\n    nomDauteur:false\n  };\n\n  onFrmSubmit(f) {\n    //console.log(f.form.controls);\n\n    if (!f.valid) {\n      this.erreur = true;\n      this.success = false;\n      for (let control in f.form.controls) {\n        this.error[control] =\n          f.form.controls[control].status === \"INVALID\" ? true : false;\n      }\n    } else {\n      this.erreur = false;\n      this.success = true;\n      f.resetForm();\n      // autre traitement sauvegarde\n    }\n  }\n\n  onChange(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n  }\n\n  onFrmReset(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n    f.resetForm();\n  }\n\n  }\n\n\n\n\n\n\n\n","\n<!--Formulaire-->\n\n<div class=\"container\">\n  <h2 class=\"text-center my-3\">Ajouter un Article</h2>\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <form #f=\"ngForm\" (ngSubmit)=\"onSubmitArticle(f)\" (submit)=\"onFrmSubmit(f)\" (reset)=\"onFrmReset(f)\">\n              <div class=\"form-group\">\n                  <label for=\"titre\">Titre</label>\n                  <input class=\"form-control\" type=\"text\" name=\"titre\" id=\"titre\" value=\"\" placeholder=\"titre\" ngModel #titre=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.titre}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"contenu\">Contenu</label>\n                  <input class=\"form-control\" type=\"text\" name=\"contenu\" id=\"contenu\" value=\"\" placeholder=\"contenu\" ngModel #contenu=\"ngModel\" required minlength=\"3\" maxlength=\"255\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.contenu}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"nomDauteur\">Auteur</label>\n                  <input name=\"nomDauteur\" type=\"text\" placeholder=\"nomDauteur\" class=\"form-control\" id=\"nomDauteur\" ngModel #auteur=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{erreur: error.nomDauteur}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"status\">Status</label>\n                  <select class=\"form-control\" placeholder=\"status\" id=\"status\" name=\"status\" ngModel #status=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.status}\">\n              <option>Publié</option>\n              <option>Brouillon</option>\n              </select>\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary m-2\">Ajouter</button>\n              <button routerLink=\"/admin/article/liste\" type=\"reset\" class=\"btn btn-danger m-2\">Annuler</button>\n\n          </form>\n          <!--condition si erreur ce qu'il s'affichera-->\n          <div *ngIf=\"erreur\" class=\"alert alert-danger mt-5\">\n              <div *ngIf=\"!titre.valid && titre.errors.required\">Champ titre requis</div>\n              <div *ngIf=\"!titre.valid && titre.errors.minlength\">\n                  Champ titre doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!titre.valid && titre.errors.maxlength\">\n                  Champ titre doit avoir 30 caractères maximum\n              </div>\n              <div *ngIf=\"!auteur.valid && auteur.errors.required\">\n                  Champ auteur requis\n              </div>\n\n              <div *ngIf=\"!status.valid && status.errors.required\">\n                  Champ status requis\n              </div>\n          </div>\n          <div *ngIf=\"success\" class=\"alert alert-success mt-5\">\n              Ajout reussi!\n          </div>\n      </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleService } from '../../../service/article.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n// importer tout les fichier necessaire et les déclarer dans construtor\n\n@Component({\n  selector: 'app-liste',\n  templateUrl: './liste.component.html',\n  styleUrls: ['./liste.component.css']\n})\nexport class ListeComponent implements OnInit {\n\n  articles ;\n  pageActuel = 1; // pagination\n\n  url = \"https://agile-oasis-25523.herokuapp.com/articles\"; //\n\n  constructor(private service : ArticleService,      // private : Une propriété privée de méthode n'est\n              private http : HttpClient,            // accessible ou appelée qu'à partir de l'instance de\n              private router : ActivatedRoute) { } // classe elle-même\n\n// CRUD (Create, Read, Update et Delete)\n\n        // Créer\n\n    onSubmitArticle(f)\n    {\n      //console.log(f.value)\n      const article = f.value;\n      this.http.post(this.url,JSON.stringify(article))\n        .subscribe((response : Response) => {\n          // que f.value soit conforme ou pas  => toujours OK avec JSONPlaceholder\n          console.log(response);\n          article[\"id\"] = response['id']\n          this.articles.splice(0,0,article) ;\n        })\n    }\n\n        // Read\n\n   ngOnInit() {\n    this.http.get(this.url)\n      .subscribe( (response : Response) => {\n        //console.log(response)\n        this.articles = response ;\n      });\n  }\n       //Modifier\n\n  onUpdateArticle(article)\n  {\n    this.http.put(this.url + `/${article._id}`,JSON.stringify(article))\n      .subscribe((response : Response) => {\n        // que article soit conforme ou pas  => toujours OK avec JSONPlaceholder\n        // par contre pas si vous essayer de modifier un article créé par vous => erreur 500\n        console.log(response);\n        article.titre = article.titre + \" Modifié!\";\n      })\n    }\n\n       //Supprimer\n\n  onDeleteArticle(article)\n  {\n    this.http.delete(this.url + `/${article._id}`)\n      .subscribe((response: Response) => {\n        // que article soit conforme ou pas  => toujours OK avec JSONPlaceholder\n\n        console.log(response);\n        let index = this.articles.indexOf(article);\n        this.articles.splice(index,1) ;\n      })\n  }\n}\n\n\n\n","<div class=\"row mt-3\">\n  <div class=\"col-4\">\n      <app-menu-dashboard></app-menu-dashboard> <!--balise qui nous permet de récupérer ce qui est dans le fichier html menu-dashboard soit la colonne de gauche dans le back-->\n  </div>\n  <div class=\"col-8\">\n      <h1>Gestion des articles </h1>\n      <div>\n\n        <!--lien qui  menera à la page ajouter un article, à l'aide de routerlink, path déclarer dans app.module.ts-->\n          <a routerLink=\"/admin/article/ajouter\" class=\"btn btn-primary\">Ajouter un article</a>\n      </div>\n\n      <table class=\"table table-striped mt-3\">\n          <tbody>\n            <th>ID</th>\n            <th>Titre</th>\n            <th>Auteur</th>\n            <th>Status</th>\n            <th>Date de creation</th>\n\n            <!--je fais une boucle pour que chaque article apparaisse avec son propre id, titre, nomDauteur ect... à l'aide de l'interpolation {{}}-->\n              <tr *ngFor=\"let article of articles | paginate: { itemsPerPage: 5, currentPage: pageActuel }\">\n            <!-- pagination avec déclaration de 5 items par page maximum -->\n                  <td>\n                      {{ article._id }} <!-- attention à bien reprendre les même termes déclaré dans la base de donnée -->\n                  </td>\n                  <td>\n                      {{ article.titre }}\n                    </td>\n                    <td>\n                      {{ article.nomAuteur }}\n                    </td>\n                    <td>\n                      {{ article.estPublie }}\n                    </td>\n                    <td>\n                      {{ article.dateCreation | date : 'short' }} <!-- short : pour avoir juste le jour, mois et année-->\n                  </td>\n                  <td>\n                    <!--bouton pour modifier l'article à l'aide de onUpdateArticle déclarer dans le CRUD et le router qui amenera à la page modificatiion-->\n                    <button [routerLink]=\"['/modifier']\" routerLinkActive=\"router-link-active\" (click)=\"onUpdateArticle(article)\"  class=\"btn btn-warning\">Modifier</button>\n                  </td>\n                  <td>\n                    <!--bouton pour supprimer l'article à l'aide de onDeleteArticle déclarer dans le CRUD-->\n                    <button (click)=\"onDeleteArticle(article)\" class=\"btn btn-danger\">Supprimer</button>\n                  </td>\n              </tr>\n          </tbody>\n      </table>\n        <pagination-controls (pageChange) = \"pageActuel = $event\"></pagination-controls> <!--pagination-->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleService } from '../../../service/article.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-modifier',\n  templateUrl: './modifier.component.html',\n  styleUrls: ['./modifier.component.css']\n})\nexport class ModifierComponent implements OnInit {\n\n  private articles ;\n  private url = \"https://agile-oasis-25523.herokuapp.com/articles\";\n  success = false;\n  erreur = false;\n  titre_input ;\n  contenu_input;\n  status_input;\n  nomDauteur_input;\n\n\n  constructor(private service : ArticleService,\n    private http : HttpClient,\n    private router : ActivatedRoute) { }\n\n\n      ngOnInit(): void {\n        this.http.get(this.url)\n        .subscribe( (response : Response) => {\n         console.log(response)\n          this.articles = response ;\n        });\n      }\n\n        // cette méthode va être déclancher quand l'internaute va cliquer sur le boutton submit \"envoyer du formulaire\"\n        // f => correspond à l'ensemble des champs du formulaire\n        onSubmitArticle(f:NgForm)\n        {\n         console.log(f.value);\n          const article = f.value;\n\n          this.http.post(this.url,(article))\n            .subscribe((response : Response) => {\n              // que f.value soit conforme ou pas  => toujours OK\n              article[\"_id\"] = response['_id']\n              console.log(article);\n              this.articles.splice(0,0,article) ;\n            })\n\n        }\n      //============ sécurité formulaire ===================\n\n\n      error = {\n        titre: false,\n        contenu: false,\n        status : false,\n        nomDauteur:false\n      };\n\n      onFrmSubmit(f) {\n        //console.log(f.form.controls);\n\n        if (!f.valid) {\n          this.erreur = true;\n          this.success = false;\n          for (let control in f.form.controls) {\n            this.error[control] =\n              f.form.controls[control].status === \"INVALID\" ? true : false;\n          }\n        } else {\n          this.erreur = false;\n          this.success = true;\n          f.resetForm();\n          // autre traitement sauvegarde\n        }\n      }\n\n      onChange(f) {\n        this.erreur = false;\n        this.success = false;\n        for (let control in f.form.controls) {\n          this.error[control] = false;\n        }\n      }\n\n      onFrmReset(f) {\n        this.erreur = false;\n        this.success = false;\n        for (let control in f.form.controls) {\n          this.error[control] = false;\n        }\n        f.resetForm();\n      }\n\n      }\n\n\n\n\n\n\n\n\n\n","\n<div class=\"container\">\n  <h2 class=\"text-center my-3\">Modifier un Article</h2>\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <form #f=\"ngForm\" (ngSubmit)=\"onSubmitArticle(f)\" (submit)=\"onFrmSubmit(f)\" (reset)=\"onFrmReset(f)\">\n              <div class=\"form-group\">\n                  <label for=\"titre\">Titre</label>\n                  <input class=\"form-control\" type=\"text\" name=\"titre\" id=\"titre\" value=\"\" placeholder=\"titre\" ngModel #titre=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.titre}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"contenu\">Contenu</label>\n                  <input class=\"form-control\" type=\"text\" name=\"contenu\" id=\"contenu\" value=\"\" placeholder=\"contenu\" ngModel #contenu=\"ngModel\" required minlength=\"3\" maxlength=\"255\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.contenu}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"nomDauteur\">Auteur</label>\n                  <input name=\"nomDauteur\" type=\"text\" placeholder=\"nomDauteur\" class=\"form-control\" id=\"nomDauteur\" ngModel #auteur=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{erreur: error.nomDauteur}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"status\">Status</label>\n                  <select class=\"form-control\" placeholder=\"status\" id=\"status\" name=\"status\" ngModel #status=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.status}\">\n              <option>Publié</option>\n              <option>Brouillon</option>\n              </select>\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary m-2\">Ajouter</button>\n              <button routerLink=\"/admin/article/liste\" type=\"reset\" class=\"btn btn-danger m-2\">Annuler</button>\n\n          </form>\n          <div *ngIf=\"erreur\" class=\"alert alert-danger mt-5\">\n              <div *ngIf=\"!titre.valid && titre.errors.required\">Champ titre requis</div>\n              <div *ngIf=\"!titre.valid && titre.errors.minlength\">\n                  Champ titre doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!titre.valid && titre.errors.maxlength\">\n                  Champ titre doit avoir 30 caractères maximum\n              </div>\n              <div *ngIf=\"!auteur.valid && auteur.errors.required\">\n                  Champ auteur requis\n              </div>\n\n              <div *ngIf=\"!status.valid && status.errors.required\">\n                  Champ status requis\n              </div>\n          </div>\n          <div *ngIf=\"success\" class=\"alert alert-success mt-5\">\n              Modification reussi!\n          </div>\n      </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleService } from 'src/app/service/article.service';\nimport { UsersService } from 'src/app/service/users.service';\nimport { CommentairesService } from 'src/app/service/commentaires.service';\n// importer tout les fichier necessaire et les déclarer dans construtor\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  nbrArticles;\n  nbrUsers;\n  nbrCommentaires;\n\n  constructor(private article : ArticleService,\n              private users : UsersService,\n              private commentaires : CommentairesService) {}\n\n\n  // declaration et lecture du nombre d'article, utilisateurs et commentaires\n\n  ngOnInit(): void {\n    this.article.getAllArticles()\n      .subscribe( (response : Response) => {\n        this.nbrArticles = response;\n        console.log(this.nbrArticles)\n      })\n      this.users.getAllUtilisateurs()\n      .subscribe( (response : Response) => {\n        this.nbrUsers = response;\n        console.log(this.nbrUsers)\n      })\n      this.commentaires.getAllCommentaires()\n      .subscribe( (response : Response) => {\n        this.nbrCommentaires = response;\n        console.log(this.nbrCommentaires)\n      })\n  }\n\n}\n","<div class=\"row \">\n  <div class=\"col-4\">\n      <app-menu-dashboard></app-menu-dashboard> <!--balise qui nous permet de récupérer ce qui est dans le fichier html menu-dashboard soit la colonne de gauche dans le back-->\n  </div>\n\n  <div class=\"col-4\">\n      <h1>Accueil BackOffice</h1>\n  </div>\n\n  <div class=\"col-4\">\n      <h1>Statistiques</h1>\n    <table>\n\n        <tr class=\" border-danger\">\n          <td>Nombre d'article : {{nbrArticles.length}}</td> <!--length: pour avoir le nombre d'articles au total-->\n        </tr>\n\n        <tr>\n          <td>Nombre d'utilisateur : {{nbrUsers.length}}</td> <!--nbrX déclarer dans le fichier ts-->\n        </tr>\n\n        <tr>\n          <td>Commentaires : {{nbrCommentaires.length}}</td>\n        </tr>\n\n    </table>\n\n  <h1>Flux RSS</h1>\n\n      <div class=\"md-form\">\n  <textarea type=\"text\" id=\"form8\" class=\"md-textarea form-control\" mdbInput> Lorem ipsum dolor sit amet consectetur adipisicing elit. Nisi totam laudantium harum, eius fugiat earum ea odit saepe repudiandae et delectus hic? Nobis quod sequi illo rem incidunt veritatis ratione. </textarea>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-dashboard',\n  templateUrl: './menu-dashboard.component.html',\n  styleUrls: ['./menu-dashboard.component.css']\n})\nexport class MenuDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Card est une boîte bordée avec une bordure autour de son contenu. Il comprend des options pour les en-têtes, pieds de page, contenu, couleurs, etc.-->\n\n<div class=\"card\">\n\n  <h2 class=\"card-header\">Gestion</h2>\n\n  <ul class=\"list-group list-group-flush\">\n\n      <li class=\"list-group-item\">\n        <a routerLink=\"/admin/article/liste\">Articles</a>\n      </li>\n\n      <li class=\"list-group-item\">\n        <a routerLink=\"/admin/users/listUser\">Users</a>\n      </li>\n\n      <li class=\"list-group-item\">\n        <a routerLink=\"/admin/parametres\">Parametres</a>\n      </li>\n\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parametres',\n  templateUrl: './parametres.component.html',\n  styleUrls: ['./parametres.component.css']\n})\nexport class ParametresComponent implements OnInit {\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"row mt-3 justify-content-between\">\n  <div class=\"col-4\">\n      <app-menu-dashboard></app-menu-dashboard>\n  </div>\n\n  <div class=\"col-4\">\n\n    <div class=\"form-group\">\n\n      <label for=\"FormControlSelect1\">Nombre d'article</label>\n\n      <select class=\"form-control\" id=\"FormControlSelect1\"> <!--pour avoir un déroulement avec comme 1 préselectionné-->\n        <option selected>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n      </select>\n    </div>\n\n    <div class=\"form group\">\n      <label>Balise SEO title, meta description</label>\n      <div class=\"md-form\">\n        <textarea type=\"text\" id=\"form8\" class=\"md-textarea form-control\" mdbInput> t-shirt chemise chaussures chemises sac enfant</textarea> <!--textarea : zone de texte-->\n      </div>\n    </div>\n    <div class=\"form group\">\n      <label>Texte d'introduction</label>\n      <div class=\"md-form\">\n        <textarea type=\"text\" id=\"form8\" class=\"md-textarea form-control\" mdbInput> Lorem ipsum dolor sit amet consectetur adipisicing elit. Nisi totam laudantium harum, eius fugiat earum ea odit saepe repudiandae et delectus hic? Nobis quod sequi illo rem incidunt veritatis ratione. </textarea>\n      </div>\n    </div>\n    <div class=\"form group\">\n      <label>Titre de la page d'acceuil</label>\n      <div class=\"md-form\">\n        <textarea type=\"text\" id=\"form8\" class=\"md-textarea form-control\" mdbInput>Les petits benny</textarea>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-ajout-users',\n  templateUrl: './ajout.component.html',\n  styleUrls: ['./ajout.component.css']\n})\nexport class AjoutComponent implements OnInit {\n\n  success = false;\n  erreur = false;\n  titre_input ;\n  contenu_input;\n  email_input;\n  private url = \"https://agile-oasis-25523.herokuapp.com/utilisateurs\";\n  private utilisateurs;\n  id = \"_id\";\n\n\n\n  constructor(private http : HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get(this.url)\n    .subscribe( (response : Response) => {\n     console.log(response)\n      this.utilisateurs = response ;\n    });\n  }\n\n    // cette méthode va être déclancher quand l'internaute va cliquer sur le boutton submit \"envoyer du formulaire\"\n    // f => correspond à l'ensemble des champs du formulaire\n    onSubmitUser(f:NgForm)\n    {\n     console.log(f.value);\n      const user = f.value;\n\n      this.http.post(this.url,(user))\n        .subscribe((response : Response) => {\n          // que f.value soit conforme ou pas  => toujours OK avec JSONPlaceholder\n          user[\"_id\"] = response['_id']\n          console.log(user);\n          this.utilisateurs.splice(0,0,user) ;\n        })\n\n    }\n  //============ sécurité formulaire ===================\n\n\n  error = {\n    nom: false,\n    prenom: false,\n    email: false,\n    password: false,\n    role : false,\n    estActif:false\n  };\n\n  onFrmSubmit(f) {\n    //console.log(f.form.controls);\n\n    if (!f.valid) {\n      this.erreur = true;\n      this.success = false;\n      for (let control in f.form.controls) {\n        this.error[control] =\n          f.form.controls[control].status === \"INVALID\" ? true : false;\n      }\n    } else {\n      this.erreur = false;\n      this.success = true;\n      f.resetForm();\n      // autre traitement sauvegarde\n    }\n  }\n\n  onChange(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n  }\n\n  onFrmReset(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n    f.resetForm();\n  }\n\n  }\n\n\n","<div class=\"container\">\n  <h2 class=\"text-center my-3\">Ajouter un utilisateur</h2>\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <form #f=\"ngForm\" (ngSubmit)=\"onSubmitUser(f)\" (submit)=\"onFrmSubmit(f)\" (reset)=\"onFrmReset(f)\">\n              <div class=\"form-group\">\n                  <label for=\"nom\">Nom</label>\n                  <input class=\"form-control\" type=\"text\" name=\"nom\" id=\"nom\" value=\"\" placeholder=\"Nom\" ngModel #nom=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.nom}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"prenom\">Prénom</label>\n                  <input class=\"form-control\" type=\"text\" name=\"prenom\" id=\"prenom\" value=\"\" placeholder=\"prenom\" ngModel #prenom=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.prenom}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"email\">Adresse Email</label>\n                  <input name=\"email\" type=\"email\" placeholder=\"email\" class=\"form-control\" id=\"email\" ngModel #email=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{erreur: error.email}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"password\">Mot de passe</label>\n                  <input name=\"password\" type=\"password\" class=\"form-control\" id=\"password\" ngModel #password=\"ngModel\" required>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"role\">Role</label>\n                  <select class=\"form-control\" placeholder=\"role\" id=\"role\" name=\"role\" ngModel #role=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.role}\">\n              <option>user</option>\n              <option>admin</option>\n              </select>\n              </div>\n\n              <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" name=\"estActif\" ngModel #estActif=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.estActif}\">\n                  <label class=\"form-check-label\" for=\"defaultCheck1\">\n                Activer\n              </label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary m-2\">Ajouter</button>\n              <button routerLink=\"/admin/users/listUser\" type=\"reset\" class=\"btn btn-danger m-2\">Annuler</button>\n\n          </form>\n          <div *ngIf=\"erreur\" class=\"alert alert-danger mt-5\">\n              <div *ngIf=\"!nom.valid && nom.errors.required\">Champ Nom requis</div>\n              <div *ngIf=\"!nom.valid && nom.errors.minlength\">\n                  Champ Nom doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!nom.valid && nom.errors.maxlength\">\n                  Champ Nom doit avoir 30 caractères maximum\n              </div>\n\n              <div *ngIf=\"!prenom.valid && prenom.errors.required\">\n                  Champ Prenom requis\n              </div>\n              <div *ngIf=\"!prenom.valid && prenom.errors.minlength\">\n                  Le champ prenom doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!prenom.valid && prenom.errors.maxlength\">\n                  Le champ prenom doit avoir 30 caractères maximum\n              </div>\n              <div *ngIf=\"!email.valid && email.errors.required\">\n                  Champ email requis\n              </div>\n              <div *ngIf=\"!password.valid && password.errors.required\">\n                  Champ password requis\n              </div>\n              <div *ngIf=\"!role.valid && role.errors.required\">\n                  Champ role requis\n              </div>\n          </div>\n          <div *ngIf=\"success\" class=\"alert alert-success mt-5\">\n              Ajout reussi!\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../../service/users.service';\nimport { HttpClient } from '@angular/common/http';\n// importer tout les fichier necessaire et les déclarer dans construtor\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\nexport class ListUserComponent implements OnInit {\n\n  utilisateurs;\n  utilisateur;\n  pageActuel = 1; // pagination\n  url = \"https://agile-oasis-25523.herokuapp.com/utilisateurs\";\n\n  constructor(private service : UsersService,      // private : Une propriété privée de méthode n'est\n              private http : HttpClient) { }      // accessible ou appelée qu'à partir de l'instance de classe elle même\n\n// CRUD (Create, Read, Update et Delete)\n\n     // Read\n     ngOnInit() {\n      this.http.get(this.url)\n        .subscribe( (response : Response) => {\n          //console.log(response)\n          this.utilisateurs = response ;\n        });\n    }\n\n      //Modifier\n\n    onUpdateUtilisateur(utilisateur)\n    {\n      this.http.put(this.url + `/${utilisateur._id}`,JSON.stringify(utilisateur))\n        .subscribe((response : Response) => {\n          // que article soit conforme ou pas  => toujours OK avec JSONPlaceholder\n          // par contre pas si vous essayer de modifier un article créé par vous => erreur 500\n          console.log(response);\n          utilisateur.titre = utilisateur.titre + \" Modifié!\";\n        })\n      }\n\n      //Supprimer\n    onDeleteUtilisateur(utilisateur)\n    {\n      this.http.delete(this.url + `/${utilisateur._id}`)\n        .subscribe((response: Response) => {\n          // que utilisateur soit conforme ou pas  => toujours OK avec JSONPlaceholder\n\n          console.log(response);\n          let index = this.utilisateurs.indexOf(utilisateur);\n          this.utilisateurs.splice(index,1) ;\n        })\n    }\n\n}\n","<div class=\"row mt-3\">\n  <div class=\"col-4\">\n    <app-menu-dashboard></app-menu-dashboard>\n  </div>\n\n  <div class=\"col-8\">\n      <h1>Gestion des utilisateurs </h1>\n\n      <!--Router au fichier aujouter un utilisateurs-->\n      <div>\n          <a routerLink=\"/admin/users/ajout\" class=\"btn btn-primary\">Ajouter un utilisateur</a>\n      </div>\n\n      <table class=\"table table-striped mt-3\">\n\n          <tbody>\n\n            <th>Nom</th>\n            <th>Prénom</th>\n            <th>email</th>\n            <th>Rôle</th>\n            <th>Status</th>\n\n            <!--boucle pour afficher chaque utilisateur et ses caractéristique avec une pagination de 5 items par page-->\n\n              <tr *ngFor=\"let user of utilisateurs | paginate: { itemsPerPage: 5, currentPage: pageActuel } \">\n                  <td>\n                      {{ user.nom }}\n                  </td>\n\n                  <td>\n                      {{ user.prenom }}\n                  </td>\n\n                  <td>\n                      {{ user.email }}\n                  </td>\n\n                  <td>\n                      {{ user.role }}\n                  </td>\n\n                  <td>\n                      {{user.estActif}}\n                  </td>\n\n                  <td>\n                    <a [routerLink]=\"['/modifierUser']\" routerLinkActive=\"router-link-active\" (click)=\"onUpdateUtilisateur(utilisateur)\" class=\"btn btn-warning\">Modifier</a>\n                  </td>\n\n                  <td>\n                    <a (click)=\"onDeleteUtilisateur(utilisateur)\" class=\"btn btn-danger\">Supprimer</a>\n                  </td>\n              </tr>\n          </tbody>\n      </table>\n      <pagination-controls (pageChange) = \"pageActuel = $event\"></pagination-controls>\n  </div>\n</div>\n\n<!-- onUpdate et onDelete sont déclarer dans le fichier ts c'est le CRUD-->\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../../service/users.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-modifier-user',\n  templateUrl: './modifier-user.component.html',\n  styleUrls: ['./modifier-user.component.css']\n})\nexport class ModifierUserComponent implements OnInit {\n\n  success = false;\n  erreur = false;\n  titre_input ;\n  contenu_input;\n  email_input;\n  private url = \"https://agile-oasis-25523.herokuapp.com/utilisateurs\";\n  private utilisateurs;\n  id = \"_id\";\n\n\n  constructor(private service : UsersService,\n    private http : HttpClient,\n    private router : ActivatedRoute) { }\n\n\n\n  ngOnInit(): void {\n    this.http.get(this.url)\n    .subscribe( (response : Response) => {\n     console.log(response)\n      this.utilisateurs = response ;\n    });\n  }\n\n    // cette méthode va être déclancher quand l'internaute va cliquer sur le boutton submit \"envoyer du formulaire\"\n    // f => correspond à l'ensemble des champs du formulaire\n    onSubmitUser(f:NgForm)\n    {\n     console.log(f.value);\n      const user = f.value;\n\n      this.http.post(this.url,(user))\n        .subscribe((response : Response) => {\n          // que f.value soit conforme ou pas  => toujours OK avec JSONPlaceholder\n          user[\"_id\"] = response['_id']\n          console.log(user);\n          this.utilisateurs.splice(0,0,user) ;\n        })\n\n    }\n  //============ sécurité formulaire ===================\n\n\n  error = {\n    nom: false,\n    prenom: false,\n    email: false,\n    password: false,\n    role : false,\n    estActif:false\n  };\n\n  onFrmSubmit(f) {\n    //console.log(f.form.controls);\n\n    if (!f.valid) {\n      this.erreur = true;\n      this.success = false;\n      for (let control in f.form.controls) {\n        this.error[control] =\n          f.form.controls[control].status === \"INVALID\" ? true : false;\n      }\n    } else {\n      this.erreur = false;\n      this.success = true;\n      f.resetForm();\n      // autre traitement sauvegarde\n    }\n  }\n\n  onChange(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n  }\n\n  onFrmReset(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n    f.resetForm();\n  }\n\n  }\n\n\n\n","<div class=\"container\">\n  <h2 class=\"text-center my-3\">Modifier un utilisateur</h2>\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <form #f=\"ngForm\" (ngSubmit)=\"onSubmitUser(f)\" (submit)=\"onFrmSubmit(f)\" (reset)=\"onFrmReset(f)\">\n              <div class=\"form-group\">\n                  <label for=\"nom\">Nom</label>\n                  <input class=\"form-control\" type=\"text\" name=\"nom\" id=\"nom\" value=\"\" placeholder=\"Nom\" ngModel #nom=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.nom}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"prenom\">Prénom</label>\n                  <input class=\"form-control\" type=\"text\" name=\"prenom\" id=\"prenom\" value=\"\" placeholder=\"prenom\" ngModel #prenom=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.prenom}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"email\">Adresse Email</label>\n                  <input name=\"email\" type=\"email\" placeholder=\"email\" class=\"form-control\" id=\"email\" ngModel #email=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{erreur: error.email}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"password\">Mot de passe</label>\n                  <input name=\"password\" type=\"password\" class=\"form-control\" id=\"password\" ngModel #password=\"ngModel\" required>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"role\">Role</label>\n                  <select class=\"form-control\" placeholder=\"role\" id=\"role\" name=\"role\" ngModel #role=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.role}\">\n              <option>user</option>\n              <option>admin</option>\n              </select>\n              </div>\n\n              <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" name=\"estActif\" ngModel #estActif=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.estActif}\">\n                  <label class=\"form-check-label\" for=\"defaultCheck1\">\n                Activer\n              </label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary m-2\">Ajouter</button>\n              <button routerLink=\"/admin/users/listUser\" type=\"reset\" class=\"btn btn-danger m-2\">Annuler</button>\n\n          </form>\n          <div *ngIf=\"erreur\" class=\"alert alert-danger mt-5\">\n              <div *ngIf=\"!nom.valid && nom.errors.required\">Champ Nom requis</div>\n              <div *ngIf=\"!nom.valid && nom.errors.minlength\">\n                  Champ Nom doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!nom.valid && nom.errors.maxlength\">\n                  Champ Nom doit avoir 30 caractères maximum\n              </div>\n\n              <div *ngIf=\"!prenom.valid && prenom.errors.required\">\n                  Champ Prenom requis\n              </div>\n              <div *ngIf=\"!prenom.valid && prenom.errors.minlength\">\n                  Le champ prenom doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!prenom.valid && prenom.errors.maxlength\">\n                  Le champ prenom doit avoir 30 caractères maximum\n              </div>\n              <div *ngIf=\"!email.valid && email.errors.required\">\n                  Champ email requis\n              </div>\n              <div *ngIf=\"!password.valid && password.errors.required\">\n                  Champ password requis\n              </div>\n              <div *ngIf=\"!role.valid && role.errors.required\">\n                  Champ role requis\n              </div>\n          </div>\n          <div *ngIf=\"success\" class=\"alert alert-success mt-5\">\n              Ajout reussi!\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-formulaire',\n  templateUrl: './formulaire.component.html',\n  styleUrls: ['./formulaire.component.css']\n})\nexport class FormulaireComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<form>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputEmail4\">Email</label>\n      <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" required=\"\">\n    </div>\n\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputPassword4\">Mot de passe</label>\n      <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" required=\"\">\n    </div>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"inputAddress\">Adresse</label>\n    <input type=\"text\" class=\"form-control is-valid\" id=\"inputAddress\" placeholder=\"Votre adresse\">\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputCity\">Ville</label>\n      <input type=\"text\" class=\"form-control is-invalid\" id=\"inputCity\" required=\"\">\n    </div>\n\n    <div class=\"form-group col-md-2\">\n      <label for=\"inputZip\">Code Postal</label>\n      <input type=\"text\" class=\"form-control\" id=\"inputZip\">\n    </div>\n\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">M'enregistrer</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <div class=\"container\">\n        <div class=\"card card-container\">\n            <!-- lien de l'avatar -->\n            <img id=\"profile-img\" class=\"profile-img-card\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\n            <p id=\"profile-name\" class=\"profile-name-card\"></p>\n\n            <form class=\"form-signin\">\n\n                <span id=\"reauth-email\" class=\"reauth-email\"></span>\n\n                <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email\" required autofocus>\n\n                <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Mot de passe\" required>\n\n                <div id=\"remember\" class=\"checkbox\">\n                    <label>\n                        <input type=\"checkbox\" value=\"remember-me\"> Se souvenir de moi\n                    </label>\n                </div>\n\n                <button class=\"btn btn-lg btn-primary btn-block btn-signin\" type=\"submit\">Connecter</button>\n            </form>\n            <a href=\"/formulaire\" class=\"forgot-password\"> <!--lien vers le formulaire-->\n                Mot de passe oublié\n            </a>\n        </div><!-- /card-container -->\n    </div><!-- /container -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  toogleMenu(menu)\n  {\n    menu.classList.toggle(\"collapse\")\n  }\n\n}\n","\n<nav class=\"navbar navbar-expand-lg bg-light navbar-light\">\n  <a class=\"navbar-brand\" style=\"color: black;\">👕 Les Petits Benny</a>\n\n  <button class=\"navbar-toggler\" (click)=\"toogleMenu(menu)\">\n      <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" #menu>\n      <ul class=\"navbar-nav mr-auto\" style=\"list-style:none;\"> <!--mr-auto pour bien espacer les éléments dans le menu -->\n          <li class=\"nav-item\">\n              <a routerLink=\"/\" class=\"nav-link\" style=\"color: black;\">Accueil</a>\n          </li>\n      </ul>\n\n      <ul class=\"navbar-nav\" style=\"list-style:none;\">\n          <li class=\"nav-item\">\n            <a routerLink=\"/contact\" class=\"nav-link\"style=\"color: black;\">Nous contacter</a>\n          </li>\n      </ul>\n\n      <ul class=\"navbar-nav\" style=\"list-style:none;\">\n        <li class=\"nav-item\">\n            <a routerLink=\"/login\" class=\"nav-link\" style=\"color: black;\">Login</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav\"style=\"list-style:none;\">\n          <li class=\"nav-item\">\n              <a routerLink=\"/admin\" class=\"nav-link\" style=\"color: black;\">Admin</a>\n          </li>\n      </ul>\n  </div>\n</nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ArticleService} from \"../../service/article.service\";\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n\n  styleUrls: ['./accueil.component.css']\n})\n\nexport class AccueilComponent implements OnInit {\n\n  pageActuel = 1;\n  articles;\n  commentaires;\n\n\n  constructor(private service : ArticleService) {\n   }\n  ngOnInit(): void {\n\n//obtention des touts les articles grâce à article.service.ts\n    this.service.getAllArticles()\n      .subscribe( (response : Response) => {\n        this.articles = response;\n        console.log(this.articles)\n      })\n\n    }\n\n}\n","\n\n<div class=\"row\">\n\n <div class=\"col-12 text-center\" >\n   <!--lien image qui se trouve dans le fichier assets-->\n      <img src=\"assets/lesPetitsBenny.jpg\"alt=\"\">\n  </div>\n</div>\n\n<br><br>\n\n<div class=\"container, card-background\">\n\n  <div class=\"row mt-3\" >\n    <!--creation de boucle pour l'apparition de chaque article avec un pagination de 5 articles par page-->\n\n    <article class=\"col-6\" *ngFor=\"let article of articles | paginate: { itemsPerPage: 5, currentPage: pageActuel }\">\n\n      <img [src]=\"article.url\" alt=\"\" class=\"img-fluid\">\n\n        <tr>\n      <img class=\"col-4\" class=\"img-fluid\" src=\"assets/{{article.img}}\" alt=\"\"  style=\"width: 100%;\">\n        <br><br>\n          <h3 class=\"h6 col-4 text-center\">{{article.titre}}</h3>\n\n            <td class=\"col-4\">{{article.contenu}}</td>\n\n            <!--lien vers une page où seul l'article choisis apparaitra grâce à l'id-->\n              <a [routerLink]=\"['/article', article._id]\" class=\"btn btn-secondary\">Voir plus</a>\n        </tr>\n\n    </article>\n  </div>\n    <!--pagination-->\n    <pagination-controls (pageChange) = \"pageActuel = $event\"></pagination-controls>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\"; // ce composant permet de récupérer l'id dans l'url actuel\nimport {ArticleService} from \"../../service/article.service\";\nimport {CommentairesService} from \"../../service/commentaires.service\";\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './articles.component.html',\n  styleUrls: ['./articles.component.css']\n})\nexport class ArticlesComponent implements OnInit {\n\n   article; // un seul article\n   commentaire;\n   articles;\n   commentaires;\n\n\n\n  constructor(\n      private router : ActivatedRoute ,\n      private service : ArticleService,\n      private services : CommentairesService)\n  { }\n  ngOnInit(): void {\n\n// pour avoir juste l'article de l'id concerné\n\n    this.router.paramMap.subscribe((params)=>{\n      const id = params.get(\"id\");\n      console.log(id)\n      this.service.getArticleById(id)\n        .subscribe((response: Response)=>{\n          this.article = response;\n          console.log(this.article);\n        })\n\n    })\n    // pour avoir juste le commentaire de l'id concerné\n\n    this.router.paramMap.subscribe((params)=>{\n      const id = params.get(\"id\");\n      console.log(id)\n      this.services.getAllCommentaires()\n        .subscribe((response: Response)=>{\n          this.commentaires = response;\n          console.log(this.commentaires);\n        })\n\n\n    })\n\n    }\n}\n\n\n\n\n","<div class=\"container; card-background\"  >\n\n  <div class=\"row mt-3\">\n    <div class=\"col-12\" style=\"margin-top:30px;\">\n      <h1>{{ article[0].titre }}</h1> <!-- [0] permet de prendre en fonction de chaque id -->\n      <p>{{ article[0].contenu }}</p>\n      <img src=\"assets/{{article[0].img}}\" alt=\"\" class=\"img-fluid\" >\n      <br><br>\n      <p>Publié le : {{article[0].dateCreation | date : 'shortDate'}}</p>\n<!--Une boucle commentaire pour que le commentaire de l'article concerné apparaisse-->\n        <div *ngFor=\"let commentaire of commentaires\">\n          <div *ngIf=\"article[0]._id === commentaire.idArticle\"> <!--condition pour que le commentaire s'affiche-->\n            <p>Commentaire :</p>\n            {{commentaire.contenu}}\n          </div>\n        </div>\n        <br><br>\n        <button routerLink=\"\" class=\"btn btn-lg btn-primary\">Retour à l'accueil</button>\n    </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  success = false ;\n  email_input ;\n  commentaire_input ;\n  constructor() { }\n  ngOnInit(): void {\n  }\n  // cette méthode va être déclenchée quand l'internaute va cliquer que le bouton submit \"envoyer du formulaire\"\n  // f => correspond à l'ensemble de champs du formulaire\n  // donc dans f vous allez retouver les champs commentaires et le champ email\n  demandeContact(f){\n    if(f.valid){\n      // afficher dans la console // ou un enregistrement en bdd\n      console.log(f.value)\n      // afficher un bandeau tout est ok\n      this.success = true;\n      //this.email_input.touched = false;\n      // console.log(this.email_input);\n      f.resetForm();\n      //this.email_input = \"\";\n      //this.commentaire_input = \"\";\n      // vider les champs du formulaire\n\n\n    }\n\n  }\n\n}\n","<!-- Formulaire Contact-->\n<!--\n    ne pas mettre l'attribut actin/ method dans la balise form\n-->\n<h2 class=\"mt-3\">Nous contacter</h2>\n<form #f=\"ngForm\" (submit)=\"demandeContact(f)\">\n    <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"text\" name=\"email\" class=\"form-control\" ngModel #email=\"ngModel\" required minlength=\"3\" maxlength=\"255\">\n        <div class=\"alert alert-danger\" *ngIf=\"email.touched && !email.valid\">\n            <p *ngIf=\"email.errors.required\">Veuillez completer le champ email</p>\n            <p *ngIf=\"email.errors.minlength\">Le champs email doit avoir 3 caracteres au minimum</p>\n            <p *ngIf=\"email.errors.maxlength\">Le champ email contient au maximum 255 caracteres</p>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"commentaire\">Commentaires :</label> <br>\n        <textarea name=\"commentaire\" class=\"form-control\" ngModel #commentaire = \"ngModel\" ngModel #commentaire=\"ngModel\" required minlength=\"3\" maxlength=\"255\">\n        </textarea>\n            <div class=\"alert alert-danger\" *ngIf=\"commentaire.touched && !commentaire.valid\">\n                <p *ngIf=\"commentaire.errors.required\">Veuillez completer le champ commentaire</p>\n                <p *ngIf=\"commentaire.errors.minlength\">Le champs commentaire doit avoir 3 caracteres au minimum</p>\n                <p *ngIf=\"commentaire.errors.maxlength\">Le champ commentaire contient au maximum 255 caracteres</p>\n            </div>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"submit\" class=\"btn btn-primary\">\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ERROR 404</p>\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n\n  id = \"_id\";\n  url = \"https://agile-oasis-25523.herokuapp.com/articles\";\n\n\n\n\n  constructor(private http : HttpClient) { }\n\n  // pour avoir tout les articles\n\n  getAllArticles()\n  {\n    return this.http.get(this.url);\n  }\n\n  // pour avoir un seul article selon son id\n\n  getArticleById(id)\n  {\n    return this.http.get(this.url+\"/\"+id);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentairesService {\n\n  commentaires = \"https://agile-oasis-25523.herokuapp.com/commentaires\"\n  constructor(private http : HttpClient) { }\n\n  // pour avoir tout les commentaires\n\n  getAllCommentaires()\n  {\n    return this.http.get(this.commentaires);\n  }\n\n  // pour avoir un commentaire selon l'id\n\n  getCommentaireById(id)\n  {\n    return this.http.get(this.commentaires+\"/\"+id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.css']\n})\nexport class ServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>service works!</p>\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n\n  utilisateurs = \"https://agile-oasis-25523.herokuapp.com/utilisateurs/\"\n\n  constructor(private http : HttpClient) { }\n\n// pour avoir tout les utilisateurs\n\n  getAllUtilisateurs()\n  {\n    return this.http.get(this.utilisateurs);\n  }\n\n// pour avoir un utilisateur selon son id\n\n  getUtilisateursById(id)\n  {\n    return this.http.get(this.utilisateurs+\"/\"+id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}