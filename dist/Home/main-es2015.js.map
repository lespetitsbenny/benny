{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/back/article/ajouter/ajouter.component.ts","./src/app/back/article/ajouter/ajouter.component.html","./src/app/back/article/liste/liste.component.ts","./src/app/back/article/liste/liste.component.html","./src/app/back/article/modifier/modifier.component.ts","./src/app/back/article/modifier/modifier.component.html","./src/app/back/dashboard/dashboard.component.ts","./src/app/back/dashboard/dashboard.component.html","./src/app/back/menu-dashboard/menu-dashboard.component.ts","./src/app/back/menu-dashboard/menu-dashboard.component.html","./src/app/back/parametres/parametres.component.ts","./src/app/back/parametres/parametres.component.html","./src/app/back/users/ajout/ajout.component.ts","./src/app/back/users/ajout/ajout.component.html","./src/app/back/users/list-user/list-user.component.ts","./src/app/back/users/list-user/list-user.component.html","./src/app/back/users/modifier-user/modifier-user.component.ts","./src/app/back/users/modifier-user/modifier-user.component.html","./src/app/back/users/users.component.ts","./src/app/commun/formulaire/formulaire.component.ts","./src/app/commun/formulaire/formulaire.component.html","./src/app/commun/login/login.component.ts","./src/app/commun/login/login.component.html","./src/app/commun/menu/menu.component.ts","./src/app/commun/menu/menu.component.html","./src/app/front/accueil/accueil.component.ts","./src/app/front/accueil/accueil.component.html","./src/app/front/articles/articles.component.ts","./src/app/front/articles/articles.component.html","./src/app/front/contact/contact.component.ts","./src/app/front/contact/contact.component.html","./src/app/front/not-found/not-found.component.ts","./src/app/front/not-found/not-found.component.html","./src/app/service/article.service.ts","./src/app/service/commentaires.service.ts","./src/app/service/service.component.ts","./src/app/service/service.component.html","./src/app/service/users.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'les petits benny';\n}\n","<div class=\"container\">\n<app-menu></app-menu>\n<br><br>\n<router-outlet></router-outlet>\n</div>\n<footer class=\"py-4 text-center\">\n  <mark style=\"background-color:pink\">👕 2018 - Les petits Benny</mark>\n</footer>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule} from \"@angular/common/http\";\nimport { FormsModule } from '@angular/forms';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './commun/menu/menu.component';\nimport { AccueilComponent } from './front/accueil/accueil.component';\nimport { ArticlesComponent } from './front/articles/articles.component';\n\nimport { ArticleService } from \"./service/article.service\";\nimport { DashboardComponent } from './back/dashboard/dashboard.component';\nimport { ListeComponent } from './back/article/liste/liste.component';\nimport { MenuDashboardComponent } from './back/menu-dashboard/menu-dashboard.component';\nimport { AjouterComponent } from './back/article/ajouter/ajouter.component';\nimport { ServiceComponent } from './service/service.component';\nimport { UsersComponent } from './back/users/users.component';\nimport { ParametresComponent } from './back/parametres/parametres.component';\nimport { AjoutComponent } from './back/users/ajout/ajout.component';\nimport { ListUserComponent } from './back/users/list-user/list-user.component';\nimport { UsersService } from './service/users.service';\n\nimport { NotFoundComponent } from './front/not-found/not-found.component';\nimport { LoginComponent } from './commun/login/login.component';\nimport { FormulaireComponent } from './commun/formulaire/formulaire.component';\nimport { ModifierComponent } from './back/article/modifier/modifier.component';\nimport { ModifierUserComponent } from './back/users/modifier-user/modifier-user.component';\nimport { ContactComponent } from './front/contact/contact.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    AccueilComponent,\n    ArticlesComponent,\n    NotFoundComponent,\n    DashboardComponent,\n    ListeComponent,\n    MenuDashboardComponent,\n    AjouterComponent,\n    ServiceComponent,\n    UsersComponent,\n    ParametresComponent,\n    AjoutComponent,\n    ListUserComponent,\n    LoginComponent,\n    FormulaireComponent,\n    ContactComponent,\n    ModifierComponent,\n    ModifierUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxPaginationModule,\n    RouterModule.forRoot(\n      [\n        { path : \"\" , component : AccueilComponent},\n        { path : \"article/:id\" , component : ArticlesComponent} ,\n        { path : \"users\" , component : UsersComponent} ,\n        { path : \"modifier\" , component : ModifierComponent} ,\n        { path : \"modifierUser\" , component : ModifierUserComponent} ,\n        { path : \"login\" , component : LoginComponent} ,\n        { path : \"contact\", component : ContactComponent},\n        { path : \"formulaire\", component : FormulaireComponent} ,\n        { path : \"admin/article/liste\" , component : ListeComponent },\n        { path : \"admin/article/ajouter\" , component : AjouterComponent },\n        { path : \"admin/users/ajout\", component : AjoutComponent },\n        { path : \"admin/users/listUser\", component : ListUserComponent },\n        { path : \"admin/parametres\", component : ParametresComponent },\n        { path : \"admin\" , component : DashboardComponent }, // admin après admin/article/liste\n        { path : \"**\", component : NotFoundComponent} // not fond toujours à la fin\n      ]\n    ),\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ArticleService,\n              UsersService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-ajouter',\n  templateUrl: './ajouter.component.html',\n  styleUrls: ['./ajouter.component.css']\n})\n\n\nexport class AjouterComponent implements OnInit {\n\n  success = false;\n  erreur = false;\n  titre_input ;\n  contenu_input;\n  status_input;\n  nomDauteur_input;\n  private url = \"https://agile-oasis-25523.herokuapp.com/articles\";\n  private articles;\n\n\n\n  constructor(private http : HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get(this.url)\n    .subscribe( (response : Response) => {\n     console.log(response)\n      this.articles = response ;\n    });\n  }\n\n    // cette méthode va être déclancher quand l'internaute va cliquer sur le boutton submit \"envoyer du formulaire\"\n    // f => correspond à l'ensemble des champs du formulaire\n    onSubmitArticle(f:NgForm)\n    {\n     console.log(f.value);\n      const article = f.value;\n\n      this.http.post(this.url,(article))\n        .subscribe((response : Response) => {\n          // que f.value soit conforme ou pas  => toujours OK\n          article[\"_id\"] = response['_id']\n          console.log(article);\n          this.articles.splice(0,0,article) ;\n        })\n\n    }\n  //============ sécurité formulaire ===================\n\n\n  error = {\n    titre: false,\n    contenu: false,\n    status : false,\n    nomDauteur:false\n  };\n\n  onFrmSubmit(f) {\n    //console.log(f.form.controls);\n\n    if (!f.valid) {\n      this.erreur = true;\n      this.success = false;\n      for (let control in f.form.controls) {\n        this.error[control] =\n          f.form.controls[control].status === \"INVALID\" ? true : false;\n      }\n    } else {\n      this.erreur = false;\n      this.success = true;\n      f.resetForm();\n      // autre traitement sauvegarde\n    }\n  }\n\n  onChange(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n  }\n\n  onFrmReset(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n    f.resetForm();\n  }\n\n  }\n\n\n\n\n\n\n\n","\n<!--Formulaire-->\n\n<div class=\"container\">\n  <h2 class=\"text-center my-3\">Ajouter un Article</h2>\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <form #f=\"ngForm\" (ngSubmit)=\"onSubmitArticle(f)\" (submit)=\"onFrmSubmit(f)\" (reset)=\"onFrmReset(f)\">\n              <div class=\"form-group\">\n                  <label for=\"titre\">Titre</label>\n                  <input class=\"form-control\" type=\"text\" name=\"titre\" id=\"titre\" value=\"\" placeholder=\"titre\" ngModel #titre=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.titre}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"contenu\">Contenu</label>\n                  <input class=\"form-control\" type=\"text\" name=\"contenu\" id=\"contenu\" value=\"\" placeholder=\"contenu\" ngModel #contenu=\"ngModel\" required minlength=\"3\" maxlength=\"255\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.contenu}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"nomDauteur\">Auteur</label>\n                  <input name=\"nomDauteur\" type=\"text\" placeholder=\"nomDauteur\" class=\"form-control\" id=\"nomDauteur\" ngModel #auteur=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{erreur: error.nomDauteur}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"status\">Status</label>\n                  <select class=\"form-control\" placeholder=\"status\" id=\"status\" name=\"status\" ngModel #status=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.status}\">\n              <option>Publié</option>\n              <option>Brouillon</option>\n              </select>\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary m-2\">Ajouter</button>\n              <button routerLink=\"/admin/article/liste\" type=\"reset\" class=\"btn btn-danger m-2\">Annuler</button>\n\n          </form>\n          <!--condition si erreur ce qu'il s'affichera-->\n          <div *ngIf=\"erreur\" class=\"alert alert-danger mt-5\">\n              <div *ngIf=\"!titre.valid && titre.errors.required\">Champ titre requis</div>\n              <div *ngIf=\"!titre.valid && titre.errors.minlength\">\n                  Champ titre doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!titre.valid && titre.errors.maxlength\">\n                  Champ titre doit avoir 30 caractères maximum\n              </div>\n              <div *ngIf=\"!auteur.valid && auteur.errors.required\">\n                  Champ auteur requis\n              </div>\n\n              <div *ngIf=\"!status.valid && status.errors.required\">\n                  Champ status requis\n              </div>\n          </div>\n          <div *ngIf=\"success\" class=\"alert alert-success mt-5\">\n              Ajout reussi!\n          </div>\n      </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleService } from '../../../service/article.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n// importer tout les fichier necessaire et les déclarer dans construtor\n\n@Component({\n  selector: 'app-liste',\n  templateUrl: './liste.component.html',\n  styleUrls: ['./liste.component.css']\n})\nexport class ListeComponent implements OnInit {\n\n  articles ;\n  pageActuel = 1; // pagination\n\n  url = \"https://agile-oasis-25523.herokuapp.com/articles\"; //\n\n  constructor(private service : ArticleService,      // private : Une propriété privée de méthode n'est\n              private http : HttpClient,            // accessible ou appelée qu'à partir de l'instance de\n              private router : ActivatedRoute) { } // classe elle-même\n\n// CRUD (Create, Read, Update et Delete)\n\n        // Créer\n\n    onSubmitArticle(f)\n    {\n      //console.log(f.value)\n      const article = f.value;\n      this.http.post(this.url,JSON.stringify(article))\n        .subscribe((response : Response) => {\n          // que f.value soit conforme ou pas  => toujours OK avec JSONPlaceholder\n          console.log(response);\n          article[\"id\"] = response['id']\n          this.articles.splice(0,0,article) ;\n        })\n    }\n\n        // Read\n\n   ngOnInit() {\n    this.http.get(this.url)\n      .subscribe( (response : Response) => {\n        //console.log(response)\n        this.articles = response ;\n      });\n  }\n       //Modifier\n\n  onUpdateArticle(article)\n  {\n    this.http.put(this.url + `/${article._id}`,JSON.stringify(article))\n      .subscribe((response : Response) => {\n        // que article soit conforme ou pas  => toujours OK avec JSONPlaceholder\n        // par contre pas si vous essayer de modifier un article créé par vous => erreur 500\n        console.log(response);\n        article.titre = article.titre + \" Modifié!\";\n      })\n    }\n\n       //Supprimer\n\n  onDeleteArticle(article)\n  {\n    this.http.delete(this.url + `/${article._id}`)\n      .subscribe((response: Response) => {\n        // que article soit conforme ou pas  => toujours OK avec JSONPlaceholder\n\n        console.log(response);\n        let index = this.articles.indexOf(article);\n        this.articles.splice(index,1) ;\n      })\n  }\n}\n\n\n\n","<div class=\"row mt-3\">\n  <div class=\"col-4\">\n      <app-menu-dashboard></app-menu-dashboard> <!--balise qui nous permet de récupérer ce qui est dans le fichier html menu-dashboard soit la colonne de gauche dans le back-->\n  </div>\n  <div class=\"col-8\">\n      <h1>Gestion des articles </h1>\n      <div>\n\n        <!--lien qui  menera à la page ajouter un article, à l'aide de routerlink, path déclarer dans app.module.ts-->\n          <a routerLink=\"/admin/article/ajouter\" class=\"btn btn-primary\">Ajouter un article</a>\n      </div>\n\n      <table class=\"table table-striped mt-3\">\n          <tbody>\n            <th>ID</th>\n            <th>Titre</th>\n            <th>Auteur</th>\n            <th>Status</th>\n            <th>Date de creation</th>\n\n            <!--je fais une boucle pour que chaque article apparaisse avec son propre id, titre, nomDauteur ect... à l'aide de l'interpolation {{}}-->\n              <tr *ngFor=\"let article of articles | paginate: { itemsPerPage: 5, currentPage: pageActuel }\">\n            <!-- pagination avec déclaration de 5 items par page maximum -->\n                  <td>\n                      {{ article._id }} <!-- attention à bien reprendre les même termes déclaré dans la base de donnée -->\n                  </td>\n                  <td>\n                      {{ article.titre }}\n                    </td>\n                    <td>\n                      {{ article.nomAuteur }}\n                    </td>\n                    <td>\n                      {{ article.estPublie }}\n                    </td>\n                    <td>\n                      {{ article.dateCreation | date : 'short' }} <!-- short : pour avoir juste le jour, mois et année-->\n                  </td>\n                  <td>\n                    <!--bouton pour modifier l'article à l'aide de onUpdateArticle déclarer dans le CRUD et le router qui amenera à la page modificatiion-->\n                    <button [routerLink]=\"['/modifier']\" routerLinkActive=\"router-link-active\" (click)=\"onUpdateArticle(article)\"  class=\"btn btn-warning\">Modifier</button>\n                  </td>\n                  <td>\n                    <!--bouton pour supprimer l'article à l'aide de onDeleteArticle déclarer dans le CRUD-->\n                    <button (click)=\"onDeleteArticle(article)\" class=\"btn btn-danger\">Supprimer</button>\n                  </td>\n              </tr>\n          </tbody>\n      </table>\n        <pagination-controls (pageChange) = \"pageActuel = $event\"></pagination-controls> <!--pagination-->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleService } from '../../../service/article.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-modifier',\n  templateUrl: './modifier.component.html',\n  styleUrls: ['./modifier.component.css']\n})\nexport class ModifierComponent implements OnInit {\n\n  private articles ;\n  private url = \"https://agile-oasis-25523.herokuapp.com/articles\";\n  success = false;\n  erreur = false;\n  titre_input ;\n  contenu_input;\n  status_input;\n  nomDauteur_input;\n\n\n  constructor(private service : ArticleService,\n    private http : HttpClient,\n    private router : ActivatedRoute) { }\n\n\n      ngOnInit(): void {\n        this.http.get(this.url)\n        .subscribe( (response : Response) => {\n         console.log(response)\n          this.articles = response ;\n        });\n      }\n\n        // cette méthode va être déclancher quand l'internaute va cliquer sur le boutton submit \"envoyer du formulaire\"\n        // f => correspond à l'ensemble des champs du formulaire\n        onSubmitArticle(f:NgForm)\n        {\n         console.log(f.value);\n          const article = f.value;\n\n          this.http.post(this.url,(article))\n            .subscribe((response : Response) => {\n              // que f.value soit conforme ou pas  => toujours OK\n              article[\"_id\"] = response['_id']\n              console.log(article);\n              this.articles.splice(0,0,article) ;\n            })\n\n        }\n      //============ sécurité formulaire ===================\n\n\n      error = {\n        titre: false,\n        contenu: false,\n        status : false,\n        nomDauteur:false\n      };\n\n      onFrmSubmit(f) {\n        //console.log(f.form.controls);\n\n        if (!f.valid) {\n          this.erreur = true;\n          this.success = false;\n          for (let control in f.form.controls) {\n            this.error[control] =\n              f.form.controls[control].status === \"INVALID\" ? true : false;\n          }\n        } else {\n          this.erreur = false;\n          this.success = true;\n          f.resetForm();\n          // autre traitement sauvegarde\n        }\n      }\n\n      onChange(f) {\n        this.erreur = false;\n        this.success = false;\n        for (let control in f.form.controls) {\n          this.error[control] = false;\n        }\n      }\n\n      onFrmReset(f) {\n        this.erreur = false;\n        this.success = false;\n        for (let control in f.form.controls) {\n          this.error[control] = false;\n        }\n        f.resetForm();\n      }\n\n      }\n\n\n\n\n\n\n\n\n\n","\n<div class=\"container\">\n  <h2 class=\"text-center my-3\">Modifier un Article</h2>\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <form #f=\"ngForm\" (ngSubmit)=\"onSubmitArticle(f)\" (submit)=\"onFrmSubmit(f)\" (reset)=\"onFrmReset(f)\">\n              <div class=\"form-group\">\n                  <label for=\"titre\">Titre</label>\n                  <input class=\"form-control\" type=\"text\" name=\"titre\" id=\"titre\" value=\"\" placeholder=\"titre\" ngModel #titre=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.titre}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"contenu\">Contenu</label>\n                  <input class=\"form-control\" type=\"text\" name=\"contenu\" id=\"contenu\" value=\"\" placeholder=\"contenu\" ngModel #contenu=\"ngModel\" required minlength=\"3\" maxlength=\"255\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.contenu}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"nomDauteur\">Auteur</label>\n                  <input name=\"nomDauteur\" type=\"text\" placeholder=\"nomDauteur\" class=\"form-control\" id=\"nomDauteur\" ngModel #auteur=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{erreur: error.nomDauteur}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"status\">Status</label>\n                  <select class=\"form-control\" placeholder=\"status\" id=\"status\" name=\"status\" ngModel #status=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.status}\">\n              <option>Publié</option>\n              <option>Brouillon</option>\n              </select>\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary m-2\">Ajouter</button>\n              <button routerLink=\"/admin/article/liste\" type=\"reset\" class=\"btn btn-danger m-2\">Annuler</button>\n\n          </form>\n          <div *ngIf=\"erreur\" class=\"alert alert-danger mt-5\">\n              <div *ngIf=\"!titre.valid && titre.errors.required\">Champ titre requis</div>\n              <div *ngIf=\"!titre.valid && titre.errors.minlength\">\n                  Champ titre doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!titre.valid && titre.errors.maxlength\">\n                  Champ titre doit avoir 30 caractères maximum\n              </div>\n              <div *ngIf=\"!auteur.valid && auteur.errors.required\">\n                  Champ auteur requis\n              </div>\n\n              <div *ngIf=\"!status.valid && status.errors.required\">\n                  Champ status requis\n              </div>\n          </div>\n          <div *ngIf=\"success\" class=\"alert alert-success mt-5\">\n              Modification reussi!\n          </div>\n      </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleService } from 'src/app/service/article.service';\nimport { UsersService } from 'src/app/service/users.service';\nimport { CommentairesService } from 'src/app/service/commentaires.service';\n// importer tout les fichier necessaire et les déclarer dans construtor\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  nbrArticles;\n  nbrUsers;\n  nbrCommentaires;\n\n  constructor(private article : ArticleService,\n              private users : UsersService,\n              private commentaires : CommentairesService) {}\n\n\n  // declaration et lecture du nombre d'article, utilisateurs et commentaires\n\n  ngOnInit(): void {\n    this.article.getAllArticles()\n      .subscribe( (response : Response) => {\n        this.nbrArticles = response;\n        console.log(this.nbrArticles)\n      })\n      this.users.getAllUtilisateurs()\n      .subscribe( (response : Response) => {\n        this.nbrUsers = response;\n        console.log(this.nbrUsers)\n      })\n      this.commentaires.getAllCommentaires()\n      .subscribe( (response : Response) => {\n        this.nbrCommentaires = response;\n        console.log(this.nbrCommentaires)\n      })\n  }\n\n}\n","<div class=\"row \">\n  <div class=\"col-4\">\n      <app-menu-dashboard></app-menu-dashboard> <!--balise qui nous permet de récupérer ce qui est dans le fichier html menu-dashboard soit la colonne de gauche dans le back-->\n  </div>\n\n  <div class=\"col-4\">\n      <h1>Accueil BackOffice</h1>\n  </div>\n\n  <div class=\"col-4\">\n      <h1>Statistiques</h1>\n    <table>\n\n        <tr class=\" border-danger\">\n          <td>Nombre d'article : {{nbrArticles.length}}</td> <!--length: pour avoir le nombre d'articles au total-->\n        </tr>\n\n        <tr>\n          <td>Nombre d'utilisateur : {{nbrUsers.length}}</td> <!--nbrX déclarer dans le fichier ts-->\n        </tr>\n\n        <tr>\n          <td>Commentaires : {{nbrCommentaires.length}}</td>\n        </tr>\n\n    </table>\n\n  <h1>Flux RSS</h1>\n\n      <div class=\"md-form\">\n  <textarea type=\"text\" id=\"form8\" class=\"md-textarea form-control\" mdbInput> Lorem ipsum dolor sit amet consectetur adipisicing elit. Nisi totam laudantium harum, eius fugiat earum ea odit saepe repudiandae et delectus hic? Nobis quod sequi illo rem incidunt veritatis ratione. </textarea>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-dashboard',\n  templateUrl: './menu-dashboard.component.html',\n  styleUrls: ['./menu-dashboard.component.css']\n})\nexport class MenuDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Card est une boîte bordée avec une bordure autour de son contenu. Il comprend des options pour les en-têtes, pieds de page, contenu, couleurs, etc.-->\n\n<div class=\"card\">\n\n  <h2 class=\"card-header\">Gestion</h2>\n\n  <ul class=\"list-group list-group-flush\">\n\n      <li class=\"list-group-item\">\n        <a routerLink=\"/admin/article/liste\">Articles</a>\n      </li>\n\n      <li class=\"list-group-item\">\n        <a routerLink=\"/admin/users/listUser\">Users</a>\n      </li>\n\n      <li class=\"list-group-item\">\n        <a routerLink=\"/admin/parametres\">Parametres</a>\n      </li>\n\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parametres',\n  templateUrl: './parametres.component.html',\n  styleUrls: ['./parametres.component.css']\n})\nexport class ParametresComponent implements OnInit {\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"row mt-3 justify-content-between\">\n  <div class=\"col-4\">\n      <app-menu-dashboard></app-menu-dashboard>\n  </div>\n\n  <div class=\"col-4\">\n\n    <div class=\"form-group\">\n\n      <label for=\"FormControlSelect1\">Nombre d'article</label>\n\n      <select class=\"form-control\" id=\"FormControlSelect1\"> <!--pour avoir un déroulement avec comme 1 préselectionné-->\n        <option selected>1</option>\n        <option>2</option>\n        <option>3</option>\n        <option>4</option>\n        <option>5</option>\n      </select>\n    </div>\n\n    <div class=\"form group\">\n      <label>Balise SEO title, meta description</label>\n      <div class=\"md-form\">\n        <textarea type=\"text\" id=\"form8\" class=\"md-textarea form-control\" mdbInput> t-shirt chemise chaussures chemises sac enfant</textarea> <!--textarea : zone de texte-->\n      </div>\n    </div>\n    <div class=\"form group\">\n      <label>Texte d'introduction</label>\n      <div class=\"md-form\">\n        <textarea type=\"text\" id=\"form8\" class=\"md-textarea form-control\" mdbInput> Lorem ipsum dolor sit amet consectetur adipisicing elit. Nisi totam laudantium harum, eius fugiat earum ea odit saepe repudiandae et delectus hic? Nobis quod sequi illo rem incidunt veritatis ratione. </textarea>\n      </div>\n    </div>\n    <div class=\"form group\">\n      <label>Titre de la page d'acceuil</label>\n      <div class=\"md-form\">\n        <textarea type=\"text\" id=\"form8\" class=\"md-textarea form-control\" mdbInput>Les petits benny</textarea>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-ajout-users',\n  templateUrl: './ajout.component.html',\n  styleUrls: ['./ajout.component.css']\n})\nexport class AjoutComponent implements OnInit {\n\n  success = false;\n  erreur = false;\n  titre_input ;\n  contenu_input;\n  email_input;\n  private url = \"https://agile-oasis-25523.herokuapp.com/utilisateurs\";\n  private utilisateurs;\n  id = \"_id\";\n\n\n\n  constructor(private http : HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get(this.url)\n    .subscribe( (response : Response) => {\n     console.log(response)\n      this.utilisateurs = response ;\n    });\n  }\n\n    // cette méthode va être déclancher quand l'internaute va cliquer sur le boutton submit \"envoyer du formulaire\"\n    // f => correspond à l'ensemble des champs du formulaire\n    onSubmitUser(f:NgForm)\n    {\n     console.log(f.value);\n      const user = f.value;\n\n      this.http.post(this.url,(user))\n        .subscribe((response : Response) => {\n          // que f.value soit conforme ou pas  => toujours OK avec JSONPlaceholder\n          user[\"_id\"] = response['_id']\n          console.log(user);\n          this.utilisateurs.splice(0,0,user) ;\n        })\n\n    }\n  //============ sécurité formulaire ===================\n\n\n  error = {\n    nom: false,\n    prenom: false,\n    email: false,\n    password: false,\n    role : false,\n    estActif:false\n  };\n\n  onFrmSubmit(f) {\n    //console.log(f.form.controls);\n\n    if (!f.valid) {\n      this.erreur = true;\n      this.success = false;\n      for (let control in f.form.controls) {\n        this.error[control] =\n          f.form.controls[control].status === \"INVALID\" ? true : false;\n      }\n    } else {\n      this.erreur = false;\n      this.success = true;\n      f.resetForm();\n      // autre traitement sauvegarde\n    }\n  }\n\n  onChange(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n  }\n\n  onFrmReset(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n    f.resetForm();\n  }\n\n  }\n\n\n","<div class=\"container\">\n  <h2 class=\"text-center my-3\">Ajouter un utilisateur</h2>\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <form #f=\"ngForm\" (ngSubmit)=\"onSubmitUser(f)\" (submit)=\"onFrmSubmit(f)\" (reset)=\"onFrmReset(f)\">\n              <div class=\"form-group\">\n                  <label for=\"nom\">Nom</label>\n                  <input class=\"form-control\" type=\"text\" name=\"nom\" id=\"nom\" value=\"\" placeholder=\"Nom\" ngModel #nom=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.nom}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"prenom\">Prénom</label>\n                  <input class=\"form-control\" type=\"text\" name=\"prenom\" id=\"prenom\" value=\"\" placeholder=\"prenom\" ngModel #prenom=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.prenom}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"email\">Adresse Email</label>\n                  <input name=\"email\" type=\"email\" placeholder=\"email\" class=\"form-control\" id=\"email\" ngModel #email=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{erreur: error.email}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"password\">Mot de passe</label>\n                  <input name=\"password\" type=\"password\" class=\"form-control\" id=\"password\" ngModel #password=\"ngModel\" required>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"role\">Role</label>\n                  <select class=\"form-control\" placeholder=\"role\" id=\"role\" name=\"role\" ngModel #role=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.role}\">\n              <option>user</option>\n              <option>admin</option>\n              </select>\n              </div>\n\n              <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" name=\"estActif\" ngModel #estActif=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.estActif}\">\n                  <label class=\"form-check-label\" for=\"defaultCheck1\">\n                Activer\n              </label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary m-2\">Ajouter</button>\n              <button routerLink=\"/admin/users/listUser\" type=\"reset\" class=\"btn btn-danger m-2\">Annuler</button>\n\n          </form>\n          <div *ngIf=\"erreur\" class=\"alert alert-danger mt-5\">\n              <div *ngIf=\"!nom.valid && nom.errors.required\">Champ Nom requis</div>\n              <div *ngIf=\"!nom.valid && nom.errors.minlength\">\n                  Champ Nom doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!nom.valid && nom.errors.maxlength\">\n                  Champ Nom doit avoir 30 caractères maximum\n              </div>\n\n              <div *ngIf=\"!prenom.valid && prenom.errors.required\">\n                  Champ Prenom requis\n              </div>\n              <div *ngIf=\"!prenom.valid && prenom.errors.minlength\">\n                  Le champ prenom doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!prenom.valid && prenom.errors.maxlength\">\n                  Le champ prenom doit avoir 30 caractères maximum\n              </div>\n              <div *ngIf=\"!email.valid && email.errors.required\">\n                  Champ email requis\n              </div>\n              <div *ngIf=\"!password.valid && password.errors.required\">\n                  Champ password requis\n              </div>\n              <div *ngIf=\"!role.valid && role.errors.required\">\n                  Champ role requis\n              </div>\n          </div>\n          <div *ngIf=\"success\" class=\"alert alert-success mt-5\">\n              Ajout reussi!\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../../service/users.service';\nimport { HttpClient } from '@angular/common/http';\n// importer tout les fichier necessaire et les déclarer dans construtor\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\nexport class ListUserComponent implements OnInit {\n\n  utilisateurs;\n  utilisateur;\n  pageActuel = 1; // pagination\n  url = \"https://agile-oasis-25523.herokuapp.com/utilisateurs\";\n\n  constructor(private service : UsersService,      // private : Une propriété privée de méthode n'est\n              private http : HttpClient) { }      // accessible ou appelée qu'à partir de l'instance de classe elle même\n\n// CRUD (Create, Read, Update et Delete)\n\n     // Read\n     ngOnInit() {\n      this.http.get(this.url)\n        .subscribe( (response : Response) => {\n          //console.log(response)\n          this.utilisateurs = response ;\n        });\n    }\n\n      //Modifier\n\n    onUpdateUtilisateur(utilisateur)\n    {\n      this.http.put(this.url + `/${utilisateur._id}`,JSON.stringify(utilisateur))\n        .subscribe((response : Response) => {\n          // que article soit conforme ou pas  => toujours OK avec JSONPlaceholder\n          // par contre pas si vous essayer de modifier un article créé par vous => erreur 500\n          console.log(response);\n          utilisateur.titre = utilisateur.titre + \" Modifié!\";\n        })\n      }\n\n      //Supprimer\n    onDeleteUtilisateur(utilisateur)\n    {\n      this.http.delete(this.url + `/${utilisateur._id}`)\n        .subscribe((response: Response) => {\n          // que utilisateur soit conforme ou pas  => toujours OK avec JSONPlaceholder\n\n          console.log(response);\n          let index = this.utilisateurs.indexOf(utilisateur);\n          this.utilisateurs.splice(index,1) ;\n        })\n    }\n\n}\n","<div class=\"row mt-3\">\n  <div class=\"col-4\">\n    <app-menu-dashboard></app-menu-dashboard>\n  </div>\n\n  <div class=\"col-8\">\n      <h1>Gestion des utilisateurs </h1>\n\n      <!--Router au fichier aujouter un utilisateurs-->\n      <div>\n          <a routerLink=\"/admin/users/ajout\" class=\"btn btn-primary\">Ajouter un utilisateur</a>\n      </div>\n\n      <table class=\"table table-striped mt-3\">\n\n          <tbody>\n\n            <th>Nom</th>\n            <th>Prénom</th>\n            <th>email</th>\n            <th>Rôle</th>\n            <th>Status</th>\n\n            <!--boucle pour afficher chaque utilisateur et ses caractéristique avec une pagination de 5 items par page-->\n\n              <tr *ngFor=\"let user of utilisateurs | paginate: { itemsPerPage: 5, currentPage: pageActuel } \">\n                  <td>\n                      {{ user.nom }}\n                  </td>\n\n                  <td>\n                      {{ user.prenom }}\n                  </td>\n\n                  <td>\n                      {{ user.email }}\n                  </td>\n\n                  <td>\n                      {{ user.role }}\n                  </td>\n\n                  <td>\n                      {{user.estActif}}\n                  </td>\n\n                  <td>\n                    <a [routerLink]=\"['/modifierUser']\" routerLinkActive=\"router-link-active\" (click)=\"onUpdateUtilisateur(utilisateur)\" class=\"btn btn-warning\">Modifier</a>\n                  </td>\n\n                  <td>\n                    <a (click)=\"onDeleteUtilisateur(utilisateur)\" class=\"btn btn-danger\">Supprimer</a>\n                  </td>\n              </tr>\n          </tbody>\n      </table>\n      <pagination-controls (pageChange) = \"pageActuel = $event\"></pagination-controls>\n  </div>\n</div>\n\n<!-- onUpdate et onDelete sont déclarer dans le fichier ts c'est le CRUD-->\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../../service/users.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-modifier-user',\n  templateUrl: './modifier-user.component.html',\n  styleUrls: ['./modifier-user.component.css']\n})\nexport class ModifierUserComponent implements OnInit {\n\n  success = false;\n  erreur = false;\n  titre_input ;\n  contenu_input;\n  email_input;\n  private url = \"https://agile-oasis-25523.herokuapp.com/utilisateurs\";\n  private utilisateurs;\n  id = \"_id\";\n\n\n  constructor(private service : UsersService,\n    private http : HttpClient,\n    private router : ActivatedRoute) { }\n\n\n\n  ngOnInit(): void {\n    this.http.get(this.url)\n    .subscribe( (response : Response) => {\n     console.log(response)\n      this.utilisateurs = response ;\n    });\n  }\n\n    // cette méthode va être déclancher quand l'internaute va cliquer sur le boutton submit \"envoyer du formulaire\"\n    // f => correspond à l'ensemble des champs du formulaire\n    onSubmitUser(f:NgForm)\n    {\n     console.log(f.value);\n      const user = f.value;\n\n      this.http.post(this.url,(user))\n        .subscribe((response : Response) => {\n          // que f.value soit conforme ou pas  => toujours OK avec JSONPlaceholder\n          user[\"_id\"] = response['_id']\n          console.log(user);\n          this.utilisateurs.splice(0,0,user) ;\n        })\n\n    }\n  //============ sécurité formulaire ===================\n\n\n  error = {\n    nom: false,\n    prenom: false,\n    email: false,\n    password: false,\n    role : false,\n    estActif:false\n  };\n\n  onFrmSubmit(f) {\n    //console.log(f.form.controls);\n\n    if (!f.valid) {\n      this.erreur = true;\n      this.success = false;\n      for (let control in f.form.controls) {\n        this.error[control] =\n          f.form.controls[control].status === \"INVALID\" ? true : false;\n      }\n    } else {\n      this.erreur = false;\n      this.success = true;\n      f.resetForm();\n      // autre traitement sauvegarde\n    }\n  }\n\n  onChange(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n  }\n\n  onFrmReset(f) {\n    this.erreur = false;\n    this.success = false;\n    for (let control in f.form.controls) {\n      this.error[control] = false;\n    }\n    f.resetForm();\n  }\n\n  }\n\n\n\n","<div class=\"container\">\n  <h2 class=\"text-center my-3\">Modifier un utilisateur</h2>\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <form #f=\"ngForm\" (ngSubmit)=\"onSubmitUser(f)\" (submit)=\"onFrmSubmit(f)\" (reset)=\"onFrmReset(f)\">\n              <div class=\"form-group\">\n                  <label for=\"nom\">Nom</label>\n                  <input class=\"form-control\" type=\"text\" name=\"nom\" id=\"nom\" value=\"\" placeholder=\"Nom\" ngModel #nom=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.nom}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"prenom\">Prénom</label>\n                  <input class=\"form-control\" type=\"text\" name=\"prenom\" id=\"prenom\" value=\"\" placeholder=\"prenom\" ngModel #prenom=\"ngModel\" required minlength=\"3\" maxlength=\"30\" (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.prenom}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"email\">Adresse Email</label>\n                  <input name=\"email\" type=\"email\" placeholder=\"email\" class=\"form-control\" id=\"email\" ngModel #email=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{erreur: error.email}\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"password\">Mot de passe</label>\n                  <input name=\"password\" type=\"password\" class=\"form-control\" id=\"password\" ngModel #password=\"ngModel\" required>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"role\">Role</label>\n                  <select class=\"form-control\" placeholder=\"role\" id=\"role\" name=\"role\" ngModel #role=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.role}\">\n              <option>user</option>\n              <option>admin</option>\n              </select>\n              </div>\n\n              <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" name=\"estActif\" ngModel #estActif=\"ngModel\" required (keyup)=\"onChange(f)\" [ngClass]=\"{\n                  erreur: error.estActif}\">\n                  <label class=\"form-check-label\" for=\"defaultCheck1\">\n                Activer\n              </label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary m-2\">Ajouter</button>\n              <button routerLink=\"/admin/users/listUser\" type=\"reset\" class=\"btn btn-danger m-2\">Annuler</button>\n\n          </form>\n          <div *ngIf=\"erreur\" class=\"alert alert-danger mt-5\">\n              <div *ngIf=\"!nom.valid && nom.errors.required\">Champ Nom requis</div>\n              <div *ngIf=\"!nom.valid && nom.errors.minlength\">\n                  Champ Nom doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!nom.valid && nom.errors.maxlength\">\n                  Champ Nom doit avoir 30 caractères maximum\n              </div>\n\n              <div *ngIf=\"!prenom.valid && prenom.errors.required\">\n                  Champ Prenom requis\n              </div>\n              <div *ngIf=\"!prenom.valid && prenom.errors.minlength\">\n                  Le champ prenom doit avoir 3 caractères minimum\n              </div>\n              <div *ngIf=\"!prenom.valid && prenom.errors.maxlength\">\n                  Le champ prenom doit avoir 30 caractères maximum\n              </div>\n              <div *ngIf=\"!email.valid && email.errors.required\">\n                  Champ email requis\n              </div>\n              <div *ngIf=\"!password.valid && password.errors.required\">\n                  Champ password requis\n              </div>\n              <div *ngIf=\"!role.valid && role.errors.required\">\n                  Champ role requis\n              </div>\n          </div>\n          <div *ngIf=\"success\" class=\"alert alert-success mt-5\">\n              Ajout reussi!\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-formulaire',\n  templateUrl: './formulaire.component.html',\n  styleUrls: ['./formulaire.component.css']\n})\nexport class FormulaireComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<form>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputEmail4\">Email</label>\n      <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" required=\"\">\n    </div>\n\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputPassword4\">Mot de passe</label>\n      <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" required=\"\">\n    </div>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"inputAddress\">Adresse</label>\n    <input type=\"text\" class=\"form-control is-valid\" id=\"inputAddress\" placeholder=\"Votre adresse\">\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"inputCity\">Ville</label>\n      <input type=\"text\" class=\"form-control is-invalid\" id=\"inputCity\" required=\"\">\n    </div>\n\n    <div class=\"form-group col-md-2\">\n      <label for=\"inputZip\">Code Postal</label>\n      <input type=\"text\" class=\"form-control\" id=\"inputZip\">\n    </div>\n\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">M'enregistrer</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <div class=\"container\">\n        <div class=\"card card-container\">\n            <!-- lien de l'avatar -->\n            <img id=\"profile-img\" class=\"profile-img-card\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\n            <p id=\"profile-name\" class=\"profile-name-card\"></p>\n\n            <form class=\"form-signin\">\n\n                <span id=\"reauth-email\" class=\"reauth-email\"></span>\n\n                <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email\" required autofocus>\n\n                <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Mot de passe\" required>\n\n                <div id=\"remember\" class=\"checkbox\">\n                    <label>\n                        <input type=\"checkbox\" value=\"remember-me\"> Se souvenir de moi\n                    </label>\n                </div>\n\n                <button class=\"btn btn-lg btn-primary btn-block btn-signin\" type=\"submit\">Connecter</button>\n            </form>\n            <a href=\"/formulaire\" class=\"forgot-password\"> <!--lien vers le formulaire-->\n                Mot de passe oublié\n            </a>\n        </div><!-- /card-container -->\n    </div><!-- /container -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  toogleMenu(menu)\n  {\n    menu.classList.toggle(\"collapse\")\n  }\n\n}\n","\n<nav class=\"navbar navbar-expand-lg bg-light navbar-light\">\n  <a class=\"navbar-brand\" style=\"color: black;\">👕 Les Petits Benny</a>\n\n  <button class=\"navbar-toggler\" (click)=\"toogleMenu(menu)\">\n      <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" #menu>\n      <ul class=\"navbar-nav mr-auto\" style=\"list-style:none;\"> <!--mr-auto pour bien espacer les éléments dans le menu -->\n          <li class=\"nav-item\">\n              <a routerLink=\"/\" class=\"nav-link\" style=\"color: black;\">Accueil</a>\n          </li>\n      </ul>\n\n      <ul class=\"navbar-nav\" style=\"list-style:none;\">\n          <li class=\"nav-item\">\n            <a routerLink=\"/contact\" class=\"nav-link\"style=\"color: black;\">Nous contacter</a>\n          </li>\n      </ul>\n\n      <ul class=\"navbar-nav\" style=\"list-style:none;\">\n        <li class=\"nav-item\">\n            <a routerLink=\"/login\" class=\"nav-link\" style=\"color: black;\">Login</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav\"style=\"list-style:none;\">\n          <li class=\"nav-item\">\n              <a routerLink=\"/admin\" class=\"nav-link\" style=\"color: black;\">Admin</a>\n          </li>\n      </ul>\n  </div>\n</nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ArticleService} from \"../../service/article.service\";\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n\n  styleUrls: ['./accueil.component.css']\n})\n\nexport class AccueilComponent implements OnInit {\n\n  pageActuel = 1;\n  articles;\n  commentaires;\n\n\n  constructor(private service : ArticleService) {\n   }\n  ngOnInit(): void {\n\n//obtention des touts les articles grâce à article.service.ts\n    this.service.getAllArticles()\n      .subscribe( (response : Response) => {\n        this.articles = response;\n        console.log(this.articles)\n      })\n\n    }\n\n}\n","\n\n<div class=\"row\">\n\n <div class=\"col-12 text-center\" >\n   <!--lien image qui se trouve dans le fichier assets-->\n      <img src=\"assets/lesPetitsBenny.jpg\"alt=\"\">\n  </div>\n</div>\n\n<br><br>\n\n<div class=\"container, card-background\">\n\n  <div class=\"row mt-3\" >\n    <!--creation de boucle pour l'apparition de chaque article avec un pagination de 5 articles par page-->\n\n    <article class=\"col-6\" *ngFor=\"let article of articles | paginate: { itemsPerPage: 5, currentPage: pageActuel }\">\n\n      <img [src]=\"article.url\" alt=\"\" class=\"img-fluid\">\n\n        <tr>\n      <img class=\"col-4\" class=\"img-fluid\" src=\"assets/{{article.img}}\" alt=\"\"  style=\"width: 100%;\">\n        <br><br>\n          <h3 class=\"h6 col-4 text-center\">{{article.titre}}</h3>\n\n            <td class=\"col-4\">{{article.contenu}}</td>\n\n            <!--lien vers une page où seul l'article choisis apparaitra grâce à l'id-->\n              <a [routerLink]=\"['/article', article._id]\" class=\"btn btn-secondary\">Voir plus</a>\n        </tr>\n\n    </article>\n  </div>\n    <!--pagination-->\n    <pagination-controls (pageChange) = \"pageActuel = $event\"></pagination-controls>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\"; // ce composant permet de récupérer l'id dans l'url actuel\nimport {ArticleService} from \"../../service/article.service\";\nimport {CommentairesService} from \"../../service/commentaires.service\";\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './articles.component.html',\n  styleUrls: ['./articles.component.css']\n})\nexport class ArticlesComponent implements OnInit {\n\n   article; // un seul article\n   commentaire;\n   articles;\n   commentaires;\n\n\n\n  constructor(\n      private router : ActivatedRoute ,\n      private service : ArticleService,\n      private services : CommentairesService)\n  { }\n  ngOnInit(): void {\n\n// pour avoir juste l'article de l'id concerné\n\n    this.router.paramMap.subscribe((params)=>{\n      const id = params.get(\"id\");\n      console.log(id)\n      this.service.getArticleById(id)\n        .subscribe((response: Response)=>{\n          this.article = response;\n          console.log(this.article);\n        })\n\n    })\n    // pour avoir juste le commentaire de l'id concerné\n\n    this.router.paramMap.subscribe((params)=>{\n      const id = params.get(\"id\");\n      console.log(id)\n      this.services.getAllCommentaires()\n        .subscribe((response: Response)=>{\n          this.commentaires = response;\n          console.log(this.commentaires);\n        })\n\n\n    })\n\n    }\n}\n\n\n\n\n","<div class=\"container; card-background\"  >\n\n  <div class=\"row mt-3\">\n    <div class=\"col-12\" style=\"margin-top:30px;\">\n      <h1>{{ article[0].titre }}</h1> <!-- [0] permet de prendre en fonction de chaque id -->\n      <p>{{ article[0].contenu }}</p>\n      <img src=\"assets/{{article[0].img}}\" alt=\"\" class=\"img-fluid\" >\n      <br><br>\n      <p>Publié le : {{article[0].dateCreation | date : 'shortDate'}}</p>\n<!--Une boucle commentaire pour que le commentaire de l'article concerné apparaisse-->\n        <div *ngFor=\"let commentaire of commentaires\">\n          <div *ngIf=\"article[0]._id === commentaire.idArticle\"> <!--condition pour que le commentaire s'affiche-->\n            <p>Commentaire :</p>\n            {{commentaire.contenu}}\n          </div>\n        </div>\n        <br><br>\n        <button routerLink=\"\" class=\"btn btn-lg btn-primary\">Retour à l'accueil</button>\n    </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  success = false ;\n  email_input ;\n  commentaire_input ;\n  constructor() { }\n  ngOnInit(): void {\n  }\n  // cette méthode va être déclenchée quand l'internaute va cliquer que le bouton submit \"envoyer du formulaire\"\n  // f => correspond à l'ensemble de champs du formulaire\n  // donc dans f vous allez retouver les champs commentaires et le champ email\n  demandeContact(f){\n    if(f.valid){\n      // afficher dans la console // ou un enregistrement en bdd\n      console.log(f.value)\n      // afficher un bandeau tout est ok\n      this.success = true;\n      //this.email_input.touched = false;\n      // console.log(this.email_input);\n      f.resetForm();\n      //this.email_input = \"\";\n      //this.commentaire_input = \"\";\n      // vider les champs du formulaire\n\n\n    }\n\n  }\n\n}\n","<!-- Formulaire Contact-->\n<!--\n    ne pas mettre l'attribut actin/ method dans la balise form\n-->\n<h2 class=\"mt-3\">Nous contacter</h2>\n<form #f=\"ngForm\" (submit)=\"demandeContact(f)\">\n    <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"text\" name=\"email\" class=\"form-control\" ngModel #email=\"ngModel\" required minlength=\"3\" maxlength=\"255\">\n        <div class=\"alert alert-danger\" *ngIf=\"email.touched && !email.valid\">\n            <p *ngIf=\"email.errors.required\">Veuillez completer le champ email</p>\n            <p *ngIf=\"email.errors.minlength\">Le champs email doit avoir 3 caracteres au minimum</p>\n            <p *ngIf=\"email.errors.maxlength\">Le champ email contient au maximum 255 caracteres</p>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"commentaire\">Commentaires :</label> <br>\n        <textarea name=\"commentaire\" class=\"form-control\" ngModel #commentaire = \"ngModel\" ngModel #commentaire=\"ngModel\" required minlength=\"3\" maxlength=\"255\">\n        </textarea>\n            <div class=\"alert alert-danger\" *ngIf=\"commentaire.touched && !commentaire.valid\">\n                <p *ngIf=\"commentaire.errors.required\">Veuillez completer le champ commentaire</p>\n                <p *ngIf=\"commentaire.errors.minlength\">Le champs commentaire doit avoir 3 caracteres au minimum</p>\n                <p *ngIf=\"commentaire.errors.maxlength\">Le champ commentaire contient au maximum 255 caracteres</p>\n            </div>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"submit\" class=\"btn btn-primary\">\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ERROR 404</p>\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n\n  id = \"_id\";\n  url = \"https://agile-oasis-25523.herokuapp.com/articles\";\n\n\n\n\n  constructor(private http : HttpClient) { }\n\n  // pour avoir tout les articles\n\n  getAllArticles()\n  {\n    return this.http.get(this.url);\n  }\n\n  // pour avoir un seul article selon son id\n\n  getArticleById(id)\n  {\n    return this.http.get(this.url+\"/\"+id);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentairesService {\n\n  commentaires = \"https://agile-oasis-25523.herokuapp.com/commentaires\"\n  constructor(private http : HttpClient) { }\n\n  // pour avoir tout les commentaires\n\n  getAllCommentaires()\n  {\n    return this.http.get(this.commentaires);\n  }\n\n  // pour avoir un commentaire selon l'id\n\n  getCommentaireById(id)\n  {\n    return this.http.get(this.commentaires+\"/\"+id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.css']\n})\nexport class ServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>service works!</p>\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n\n  utilisateurs = \"https://agile-oasis-25523.herokuapp.com/utilisateurs/\"\n\n  constructor(private http : HttpClient) { }\n\n// pour avoir tout les utilisateurs\n\n  getAllUtilisateurs()\n  {\n    return this.http.get(this.utilisateurs);\n  }\n\n// pour avoir un utilisateur selon son id\n\n  getUtilisateursById(id)\n  {\n    return this.http.get(this.utilisateurs+\"/\"+id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}